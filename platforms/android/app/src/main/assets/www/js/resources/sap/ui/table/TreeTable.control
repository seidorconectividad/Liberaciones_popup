<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<control xmlns="http://www.sap.com/sap.ui.library.xsd">
    <name>TreeTable</name>
    <derived/>
    <documentation>The TreeTable control provides a comprehensive set of features to display hierarchical data.</documentation>
    <baseType>sap.ui.table/Table</baseType>
    <properties>
        <property name="expandFirstLevel" type="sap.ui.core/boolean" defaultValue="false">
            <documentation>Flag to enable or disable expanding of first level.</documentation>
        </property>
        <property name="useGroupMode" type="sap.ui.core/boolean" defaultValue="false" group="Appearance">
            <documentation>If group mode is enable nodes with subitems are rendered as if they were group headers.
This can be used to do the grouping for an OData service on the backend and visualize this in a table.
This mode only makes sense if the tree has a depth of exacly 1 (group headers and entries)</documentation>
        </property>
        <property name="groupHeaderProperty" type="sap.ui.core/string" group="Data">
            <documentation>The property name of the rows data which will be displayed as a group header if the group mode is enabled</documentation>
        </property>
        <property name="collapseRecursive" type="sap.ui.core/boolean" defaultValue="true">
            <documentation>Setting collapseRecursive to true means, that when collapsing a node all subsequent child nodes will also be collapsed.
This property is only supported with sap.ui.model.odata.v2.ODataModel.
&lt;b&gt;Note:&lt;/b&gt; collapseRecursive is currently &lt;b&gt;not&lt;/b&gt; supported if your OData service exposes the hierarchy annotation &lt;code&gt;hierarchy-descendant-count-for&lt;/code&gt;.
In this case the value of the collapseRecursive property is ignored.
For more information about the OData hierarchy annotations, please see the &lt;b&gt;SAP Annotations for OData Version 2.0&lt;/b&gt; specification.</documentation>
        </property>
        <property name="rootLevel" type="sap.ui.core/int" defaultValue="0" group="Data">
            <documentation>The root level is the level of the topmost tree nodes, which will be used as an entry point for OData services.
This property is only supported when the TreeTable uses an underlying odata services with hierarchy annotations.
This property is only supported with sap.ui.model.odata.v2.ODataModel
The hierarchy annotations may also be provided locally as a parameter for the ODataTreeBinding.</documentation>
        </property>
    </properties>
    <events>
        <event name="toggleOpenState" allowPreventDefault="false">
            <documentation>fired when a node has been expanded or collapsed (only available in hierachical mode)</documentation>
            <parameters>
                <parameter name="rowIndex" type="sap.ui.core/int">
                    <documentation>index of the expanded/collapsed row</documentation>
                </parameter>
                <parameter name="rowContext" type="sap.ui.core/object">
                    <documentation>binding context of the selected row</documentation>
                </parameter>
                <parameter name="expanded" type="sap.ui.core/boolean">
                    <documentation>flag whether the node has been expanded or collapsed</documentation>
                </parameter>
            </parameters>
        </event>
    </events>
    <methods>
        <method name="expand" type="sap.ui.table/TreeTable">
            <documentation>expands the row for the given row index</documentation>
            <parameters>
                <parameter name="rowIndex" type="sap.ui.core/int">
                    <documentation>index of the row to expand</documentation>
                </parameter>
            </parameters>
        </method>
        <method name="collapse" type="sap.ui.table/TreeTable">
            <documentation>collapses the row for the given row index</documentation>
            <parameters>
                <parameter name="rowIndex" type="sap.ui.core/int">
                    <documentation>index of the row to collapse</documentation>
                </parameter>
            </parameters>
        </method>
        <method name="collapseAll" type="sap.ui.table/TreeTable">
            <documentation>Collapses all nodes (and lower if collapseRecursive is activated)</documentation>
        </method>
        <method name="expandToLevel" type="sap.ui.table/TreeTable">
            <documentation>Expands all nodes starting from the root level to the given level 'iLevel'.

Only supported with ODataModel v2, when running in OperationMode.Client or OperationMode.Auto.
Fully supported for &lt;code&gt;sap.ui.model.ClientTreeBinding&lt;/code&gt;, e.g. if you are using a &lt;code&gt;sap.ui.model.json.JSONModel&lt;/code&gt;.

Please also see &lt;code&gt;sap.ui.model.odata.OperationMode&lt;/code&gt;.</documentation>
            <parameters>
                <parameter name="level" type="sap.ui.core/int">
                    <documentation>the level to which the trees shall be expanded</documentation>
                </parameter>
            </parameters>
        </method>
        <method name="isExpanded" type="sap.ui.core/boolean">
            <documentation>Returns whether the row is expanded or collapsed.</documentation>
            <parameters>
                <parameter name="rowIndex" type="sap.ui.core/int">
                    <documentation>index of the row to check</documentation>
                </parameter>
            </parameters>
        </method>
        <method name="isIndexSelected" type="sap.ui.core/boolean">
            <documentation>Checks if the row at the given index is selected.</documentation>
            <parameters>
                <parameter name="rowIndex" type="sap.ui.core/int">
                    <documentation>The row index for which the selection state should be retrieved</documentation>
                </parameter>
            </parameters>
        </method>
        <method name="setSelectedIndex" type="sap.ui.table/TreeTable">
            <documentation>Overriden from Table.js base class.
In a TreeTable you can only select indices, which correspond to the currently visualized tree.
Invisible tree nodes (e.g. collapsed child nodes) can not be selected via Index, because they do not
correspond to a TreeTable row.</documentation>
            <parameters>
                <parameter name="rowIndex" type="sap.ui.core/int">
                    <documentation>The row index which will be selected (if existing)</documentation>
                </parameter>
            </parameters>
        </method>
        <method name="getSelectedIndices" type="sap.ui.core/int[]">
            <documentation>Returns an array containing the row indices of all selected tree nodes (ordered ascending).

Please be aware of the following:
Due to performance/network traffic reasons, the getSelectedIndices function returns only all indices
of actually selected rows/tree nodes. Unknown rows/nodes (as in "not yet loaded" to the client), will not be
returned.</documentation>
        </method>
        <method name="setSelectionInterval" type="sap.ui.table/TreeTable">
            <documentation>Sets the selection of the TreeTable to the given range (including boundaries).
Beware: The previous selection will be lost/overriden. If this is not wanted, please use "addSelectionInterval" and
"removeSelectionIntervall".</documentation>
            <parameters>
                <parameter name="fromIndex" type="sap.ui.core/int">
                    <documentation>the start index of the selection range</documentation>
                </parameter>
                <parameter name="toIndex" type="sap.ui.core/int">
                    <documentation>the end index of the selection range</documentation>
                </parameter>
            </parameters>
        </method>
        <method name="addSelectionInterval" type="sap.ui.table/TreeTable">
            <documentation>Marks a range of tree nodes as selected, starting with iFromIndex going to iToIndex.
The TreeNodes are referenced via their absolute row index.
Please be aware, that the absolute row index only applies to the the tree which is visualized by the TreeTable.
Invisible nodes (collapsed child nodes) will not be regarded.

Please also take notice of the fact, that "addSelectionInterval" does not change any other selection.
To override the current selection, please use "setSelctionInterval" or for a single entry use "setSelectedIndex".</documentation>
            <parameters>
                <parameter name="fromIndex" type="sap.ui.core/int">
                    <documentation>The starting index of the range which will be selected.</documentation>
                </parameter>
                <parameter name="toIndex" type="sap.ui.core/int">
                    <documentation>The starting index of the range which will be selected.</documentation>
                </parameter>
            </parameters>
        </method>
        <method name="removeSelectionInterval" type="sap.ui.table/TreeTable">
            <documentation>All rows/tree nodes inside the range (including boundaries) will be deselected.
Tree nodes are referenced with theit absolute row index inside the tree-
Please be aware, that the absolute row index only applies to the the tree which is visualized by the TreeTable.
Invisible nodes (collapsed child nodes) will not be regarded.</documentation>
            <parameters>
                <parameter name="fromIndex" type="sap.ui.core/int">
                    <documentation>The starting index of the range which will be deselected.</documentation>
                </parameter>
                <parameter name="toIndex" type="sap.ui.core/int">
                    <documentation>The starting index of the range which will be deselected.</documentation>
                </parameter>
            </parameters>
        </method>
        <method name="selectAll" type="sap.ui.table/TreeTable">
            <documentation>Selects all available nodes/rows.

Explanation of the SelectAll function and what to expect from its behavior:
All rows/tree nodes locally stored on the client are selected.
In addition all subsequent rows/tree nodes, which will be paged into view are also immediatly selected.
However, due to obvious performance/network traffic reasons, the SelectAll function will NOT retrieve any data from the backend.</documentation>
        </method>
        <method name="getSelectedIndex" type="sap.ui.core/int[]">
            <documentation>Retrieves the lead selection index. The lead selection index is, among other things, used to determine the
start/end of a selection range, when using Shift-Click to select multiple entries at once.</documentation>
        </method>
        <method name="clearSelection" type="sap.ui.table/TreeTable">
            <documentation>Clears the complete selection (all tree table rows/nodes will lose their selection)</documentation>
        </method>
    </methods>
</control>
